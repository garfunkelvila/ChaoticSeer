<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dbMainDataSet" targetNamespace="http://tempuri.org/dbMainDataSet.xsd" xmlns:mstns="http://tempuri.org/dbMainDataSet.xsd" xmlns="http://tempuri.org/dbMainDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="dbMainConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dbMainConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Dark_Seer.Properties.Settings.GlobalReference.Default.dbMainConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NeuronsTableAdapter" GeneratorDataComponentClassName="NeuronsTableAdapter" Name="Neurons" UserDataComponentName="NeuronsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbMainConnectionString (Settings)" DbObjectName="dbo.Neurons" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Neurons] WHERE (([Id] = @Original_Id) AND ((@IsNull_LayerId = 1 AND [LayerId] IS NULL) OR ([LayerId] = @Original_LayerId)) AND ([Bias] = @Original_Bias))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LayerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_Bias" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Bias" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Neurons] ([Id], [LayerId], [Bias]) VALUES (@Id, @LayerId, @Bias);
SELECT Id, LayerId, Bias FROM Neurons WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Bias" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Bias" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, LayerId, Bias FROM dbo.Neurons</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Neurons] SET [Id] = @Id, [LayerId] = @LayerId, [Bias] = @Bias WHERE (([Id] = @Original_Id) AND ((@IsNull_LayerId = 1 AND [LayerId] IS NULL) OR ([LayerId] = @Original_LayerId)) AND ([Bias] = @Original_Bias));
SELECT Id, LayerId, Bias FROM Neurons WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Bias" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Bias" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LayerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_Bias" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Bias" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="LayerId" DataSetColumn="LayerId" />
              <Mapping SourceColumn="Bias" DataSetColumn="Bias" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dbMainDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="dbMainDataSet" msprop:Generator_UserDSName="dbMainDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Neurons" msprop:Generator_TableClassName="NeuronsDataTable" msprop:Generator_TableVarName="tableNeurons" msprop:Generator_RowChangedName="NeuronsRowChanged" msprop:Generator_TablePropName="Neurons" msprop:Generator_RowDeletingName="NeuronsRowDeleting" msprop:Generator_RowChangingName="NeuronsRowChanging" msprop:Generator_RowEvHandlerName="NeuronsRowChangeEventHandler" msprop:Generator_RowDeletedName="NeuronsRowDeleted" msprop:Generator_RowClassName="NeuronsRow" msprop:Generator_UserTableName="Neurons" msprop:Generator_RowEvArgName="NeuronsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="LayerId" msprop:Generator_ColumnVarNameInTable="columnLayerId" msprop:Generator_ColumnPropNameInRow="LayerId" msprop:Generator_ColumnPropNameInTable="LayerIdColumn" msprop:Generator_UserColumnName="LayerId" type="xs:int" minOccurs="0" />
              <xs:element name="Bias" msprop:Generator_ColumnVarNameInTable="columnBias" msprop:Generator_ColumnPropNameInRow="Bias" msprop:Generator_ColumnPropNameInTable="BiasColumn" msprop:Generator_UserColumnName="Bias" type="xs:float" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Neurons" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>